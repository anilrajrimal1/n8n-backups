{
  "active": false,
  "connections": {
    "copy .env file": {
      "main": [
        [
          {
            "node": "Export and load nvm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yarn install - packages": {
      "main": [
        [
          {
            "node": "yarn build project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n Form Trigger": {
      "main": [
        [
          {
            "node": "get repo_name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Export and load nvm": {
      "main": [
        [
          {
            "node": "Install Node & Install yarn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pull from branch": {
      "main": [
        [
          {
            "node": "copy .env file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clone from repository": {
      "main": [
        [
          {
            "node": "pull from branch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "yarn build project": {
      "main": [
        [
          {
            "node": "create nginx config file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test & reload nginx": {
      "main": [
        [
          {
            "node": "check domain status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get repo_name": {
      "main": [
        [
          {
            "node": "Clone from repository",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Install Node & Install yarn": {
      "main": [
        [
          {
            "node": "Yarn install - packages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create nginx config file": {
      "main": [
        [
          {
            "node": "Test & reload nginx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check domain status": {
      "main": [
        [
          {
            "node": "if http_code = 200 (true)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if http_code = 200 (true)": {
      "main": [
        [
          {
            "node": "Send noti --> Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send noti --> Failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-05-16T01:15:13.389Z",
  "id": "ecgUTUfI569OQOTt",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "dvs-v3-frontend (develop-master-staging ) workflow",
  "nodes": [
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=sed 's/admin.naxa.com.np/{{ $('n8n Form Trigger').item.json.domain_name }}/g' .env.example > .env\n",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "df49f6ec-2bff-4951-a293-5fe7afdf6eed",
      "name": "copy .env file",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2620,
        1740
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "source ~/.nvm/nvm.sh && yarn cache clean && yarn install",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "61ea547d-d3dd-41b5-a3c3-3fc62ae5bd59",
      "name": "Yarn install - packages",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3260,
        1700
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "path": "f929d7b4-c0e5-4489-96ee-dbac03aa5383",
        "formTitle": "Workflow Form",
        "formDescription": "Fill this form with correct details.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "repo_url_ssh",
              "requiredField": true
            },
            {
              "fieldLabel": "domain_name",
              "requiredField": true
            },
            {
              "fieldLabel": "branch",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "master"
                  },
                  {
                    "option": "develop"
                  },
                  {
                    "option": "staging"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "node_version",
              "fieldType": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "e9af9e53-8e1a-48cb-b04e-4a6d55f1142a",
      "name": "n8n Form Trigger",
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2,
      "position": [
        1400,
        1740
      ],
      "webhookId": "f929d7b4-c0e5-4489-96ee-dbac03aa5383"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "export NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "beba39fc-89af-460e-a2b3-2f1de5f81359",
      "name": "Export and load nvm",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2780,
        1740
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=git pull origin {{ $('n8n Form Trigger').item.json.branch }} || git pull origin master",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json.stdout }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "28ef7e94-3378-46ca-8b04-74cb357575c0",
      "name": "pull from branch",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2320,
        1640
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=git clone -b {{ $('n8n Form Trigger').item.json.branch }} {{ $('n8n Form Trigger').item.json.repo_url_ssh }} {{ $json.stdout }}-{{ $('n8n Form Trigger').item.json.branch }} || git clone -b master {{ $('n8n Form Trigger').item.json.repo_url_ssh }} {{ $json.stdout }}-master",
        "cwd": "=/srv/Projects/"
      },
      "id": "d133701d-0b0b-4386-b9be-14625b812493",
      "name": "Clone from repository",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2080,
        1700
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "source ~/.nvm/nvm.sh && yarn build",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "9cdc71b2-a985-4efc-ad76-b6ab4a2dc1fc",
      "name": "yarn build project",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3460,
        1700
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "notesInFlow": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo nginx -t && sudo nginx -s reload",
        "cwd": "/etc/nginx/sites-enabled/"
      },
      "id": "f2d126c9-3d1a-45a4-81c9-1e730df5730a",
      "name": "Test & reload nginx",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3960,
        1700
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Step 1\n\nGet Project name from Repository url\n\nClone Project from GitHub Repository to /srv/Projects directory\n\nPull from respective branch",
        "height": 463.19854545454547,
        "width": 706.9920969696972,
        "color": 4
      },
      "id": "7a09e5d5-9d21-4ebb-a388-96e28d0164b6",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        1480
      ]
    },
    {
      "parameters": {
        "content": "# Step 2\n\nSearch and Replace to api_url .env file\n\nExport and Load nvm\n\nDownload and use respective node version || use V19 as default and Install Yarn-latest",
        "height": 463.19854545454547,
        "width": 552.0640000000002,
        "color": 4
      },
      "id": "63c3d385-d982-44a7-81e0-5534bb5f4d5b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2560,
        1480
      ]
    },
    {
      "parameters": {
        "content": "# Step 3\n\nInstall required Packages using yarn\n\nBuild Project using yarn",
        "height": 463.19854545454547,
        "width": 439.81963636363645,
        "color": 4
      },
      "id": "7e676e80-47b1-465a-90b1-6d4f529f9518",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3180,
        1480
      ]
    },
    {
      "parameters": {
        "content": "# Step 4\n\nCreate nginx config file\n\nTest and Reload nginx",
        "height": 463.19854545454547,
        "width": 439.81963636363645,
        "color": 4
      },
      "id": "0d958a00-d166-468b-a715-e40221483f80",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3680,
        1480
      ]
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=url={{ $('n8n Form Trigger').item.json.repo_url_ssh }}; \nrepo_name=$(basename \"${url%.git}\"); \necho \"$repo_name\"\n",
        "cwd": "=/srv/Projects/"
      },
      "id": "001f0ce0-b5d0-4b26-a70c-4343ef31fa96",
      "name": "get repo_name",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1840,
        1740
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=source ~/.nvm/nvm.sh && nvm use {{ $('n8n Form Trigger').item.json.node_version }} || nvm use 19 && sudo npm install -g yarn",
        "cwd": "=/srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}"
      },
      "id": "78dcb8d1-cd3e-4c67-aaa5-d0d4c4b8e8c1",
      "name": "Install Node & Install yarn",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2960,
        1740
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Form Trigger Node\nIn this trigger form you need to fill up following fields:\n1. GitHub Repository URL(SSH)\n2. Domain Name\n3. Branch\n4. Node Version (optional) --> I used node V19 as default version\n#### The Project directory is set to /srv/Project by default.",
        "height": 454.1672727272726,
        "width": 476.55951515151503
      },
      "id": "3837ad2c-605b-4181-9eeb-cfbc313ee79e",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        1489.416727272726
      ]
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=sudo bash -c \"echo ' server {\n    listen 80;\n    server_name {{ $('n8n Form Trigger').item.json[\"domain_name\"] }};    # domain name to respond to\n    access_log /var/log/nginx/{{ $('n8n Form Trigger').item.json[\"domain_name\"] }}.access;\n    error_log /var/log/nginx/{{ $('n8n Form Trigger').item.json[\"domain_name\"] }}.error;\n\n    client_max_body_size 500M;            # Allow uploads/transper to 100MB.\n    client_body_buffer_size 128k;\n\n    gzip on;            # Allows compression; can be CPU intensive\n    gzip_min_length 150;\n    gzip_types    text/plain text/css application/javascript application/x-javascript text/javascript image/x-icon image/svg+xml image/png application/json ;\n\n              root /srv/Projects/{{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json[\"branch\"] }}/dist;\n              index  index.html index.htm;\n     location / {\n              add_header Access-Control-Allow-Origin *;\n              try_files \\$uri /index.html;            # if no endpoint found try index.html\n             }\n\n}' > /etc/nginx/sites-enabled/{{ $('n8n Form Trigger').item.json[\"domain_name\"] }}.conf\"\n",
        "cwd": "/etc/nginx/sites-enabled/"
      },
      "id": "20011a25-24cd-48b8-9a44-88777cbd9e45",
      "name": "create nginx config file",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3760,
        1700
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=curl -LI https://{{ $('n8n Form Trigger').item.json[\"domain_name\"] }} -o /dev/null -w '%{http_code}\\n' -s"
      },
      "id": "6472b894-44a6-43b4-ad7d-cb064c10df44",
      "name": "check domain status",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4380,
        1740
      ],
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "58f8129b-039e-4455-bd2a-9db9d4dd5628",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c42df7f5-b199-463f-912d-579616f0b19d",
      "name": "if http_code = 200 (true)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4600,
        1740
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C074KAMPD16",
          "mode": "list",
          "cachedResultName": "dvs-v3-frontend"
        },
        "text": "=Congratulations!!\n\nFinally your site is live now !\n===========================================================================================\nvisit https://{{ $('n8n Form Trigger').item.json[\"domain_name\"] }}\n===========================================================================================\n\nSome other details:\n\nGitHub Repository: {{ $('n8n Form Trigger').item.json[\"repo_url_ssh\"]}}\nGitHub Branch: {{ $('n8n Form Trigger').item.json[\"branch\"] }}\nProject Directory: /srv/Projects/\nProject Name: {{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}\nNode Version: {{ $('n8n Form Trigger').item.json[\"node_version\"] }}\n\nHope this information is useful for you !!",
        "otherOptions": {}
      },
      "id": "7e6cf012-65ad-4ad1-bcd3-46c95c037a93",
      "name": "Send noti --> Success",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        4880,
        1580
      ],
      "executeOnce": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "oytOvgZOMj4GVobW",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C074KAMPD16",
          "mode": "list",
          "cachedResultName": "dvs-v3-frontend"
        },
        "text": "=\nYou've Got an Issue !!\n\nGo & verify if everything is in working condition.\n=========================================================================\n\nWorkflow Details:\nGitHub Repository: {{ $('n8n Form Trigger').item.json[\"repo_url_ssh\"]}}\nGitHub Branch: {{ $('n8n Form Trigger').item.json[\"branch\"] }}\nProject Directory: /srv/Projects/\nProject Name: {{ $('get repo_name').item.json[\"stdout\"] }}-{{ $('n8n Form Trigger').item.json.branch }}\nNode Version: {{ $('n8n Form Trigger').item.json[\"node_version\"] }}\n\nHope this information is useful for you !!",
        "otherOptions": {}
      },
      "id": "e66db675-4798-437f-bcc4-b97b24de11e0",
      "name": "Send noti --> Failed",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        4880,
        1820
      ],
      "executeOnce": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "oytOvgZOMj4GVobW",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Slack Notification\n\n#### Check domain Status and outputs http_code of respective domain\n\n#### The IF node then verifies that the http_code is 200 or not\n\n#### If http_code = 200, Sends Success notification to slack channel (dvs-v3-frontend)\n\n#### If http_code != 200, Sends Failed notification to same channel\n\n",
        "height": 685.2435899159664,
        "width": 1034.787400186742
      },
      "id": "ca0eba74-6a51-46d8-b916-2323838c2a60",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4160,
        1360
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-05-17T06:07:48.000Z",
  "versionId": "eba80c42-22e1-416d-9c1f-cb8dcebf1134"
}