{
  "active": false,
  "connections": {
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "SSH into VM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "export NVM_DIR path": {
      "main": [
        [
          {
            "node": "Use nvm V19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Use nvm V19": {
      "main": [
        [
          {
            "node": "Install Yarn Package Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Install Yarn Package Manager": {
      "main": [
        [
          {
            "node": "Set max-heap Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set max-heap Memory": {
      "main": [
        [
          {
            "node": "Yarn install (install yarn packages)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yarn install (install yarn packages)": {
      "main": [
        [
          {
            "node": "yarn build",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "yarn build": {
      "main": [
        [
          {
            "node": "create a nginx config file in sites-enabled directory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create a nginx config file in sites-enabled directory": {
      "main": [
        [
          {
            "node": "Test nginx1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test nginx1": {
      "main": [
        [
          {
            "node": "Reload nginx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reload nginx": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "git pull develop": {
      "main": [
        [
          {
            "node": "copy .env",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH into VM": {
      "main": [
        [
          {
            "node": "git pull develop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "copy .env": {
      "main": [
        [
          {
            "node": "export NVM_DIR path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-05-14T16:32:02.179Z",
  "id": "y8J3SnykjflufIr9",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "dvs-v3-frontend deploy workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "02e5640f-38e8-443d-86a5-95ea170293f5",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        560,
        360
      ]
    },
    {
      "parameters": {
        "content": "## Setting up trigger for the workflow",
        "height": 366.19860141384584,
        "width": 276,
        "color": 6
      },
      "id": "a95450b4-0d29-4f87-bef8-560a8aa55801",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## SSH into VM\nUse respective credentials for SSH",
        "height": 351.19860141384584,
        "width": 542.9603393939393,
        "color": 6
      },
      "id": "9b610886-b92a-4733-b894-537b559a7d0c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        840,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setting up .env and loading nvm\nJust some of commands to copy .env.example to .env\nand load nvm",
        "height": 530.1986014138458,
        "width": 710,
        "color": 6
      },
      "id": "b2a3976c-a6cb-48b2-bdf5-def30d5c4633",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1660,
        122
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Installing and Setting up Yarn Package Manager\nCommand to install and setup yarn package manager\nCommand to set the heap size\nCommand to install project packages using yarn\nCommand to build the yarn project",
        "height": 530.1986014138458,
        "width": 986,
        "color": 6
      },
      "id": "ad0c47af-c587-45b3-8484-8e06474a110e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2460,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setting up nginx config, testing and reloading\nThis portion contains the commands to setup the nginx config file in /etc/nginx/sites-enabled directory.\n\nThen test the nginx connection and then reload it.",
        "height": 530.1986014138458,
        "width": 787,
        "color": 6
      },
      "id": "f0aebd5f-696c-4e8d-ae31-794d8bd18aeb",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3540,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setting up Slack for providing notification of success with the various deployment details.",
        "height": 530.1986014138458,
        "width": 570,
        "color": 6
      },
      "id": "6151a710-bcad-4dae-9713-86b6347e336c",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4400,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "export NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "019f1cab-3545-4081-92b9-3d9e024f0b34",
      "name": "export NVM_DIR path",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2160,
        260
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "nvm use 19",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "b1d1fe8c-23af-4207-9190-23feae7ab8ea",
      "name": "Use nvm V19",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2520,
        380
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo npm install -g yarn",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "8209ebb8-c070-4078-ad4b-fb2e1b91ff5a",
      "name": "Install Yarn Package Manager",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2700,
        300
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "export NODE_OPTIONS=\"--max-old-space-size=4096\"",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "2b995eac-924d-4cee-aa97-ef3091fac8d4",
      "name": "Set max-heap Memory",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2880,
        380
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "yarn install",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "049e3e16-d2e0-4d13-a01c-6d3074809fb0",
      "name": "Yarn install (install yarn packages)",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3060,
        300
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "yarn build",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "96f6a6d5-1ad6-4a9e-b00f-b60f2d0bda37",
      "name": "yarn build",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3240,
        360
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo bash -c \"echo '| server {    listen 80;    server_name dvs-dev.anilrajrimal.com.np;            # domain name to respond to    access_log /var/log/nginx/dvs-dev.anilrajrimal.com.np.access;    error_log /var/log/nginx/dvs-dev.anilrajrimal.com.np.error;    client_max_body_size 500M;            # Allow uploads/transper to 100MB.    client_body_buffer_size 128k;    gzip on;            # Allows compression; can be CPU intensive    gzip_min_length 150;    gzip_types    text/plain text/css application/javascript application/x-javascript text/javascript image/x-icon image/svg+xml image/png application/json ;    location ~ ^/(fastapi|api/v2/) {              proxy_pass http://localhost:8001;              proxy_set_header Upgrade $http_upgrade;              proxy_set_header Host $host;              proxy_set_header X-Real-IP $remote_addr;              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;              proxy_set_header X-Forwarded-Proto https;      # correctly froward>#              add_header Access-Control-Allow-Origin *;            # For allowing CORS>              proxy_connect_timeout 240;            # Timeout settings for http re>              proxy_send_timeout 240;            # Increase if server times out              proxy_read_timeout 240;              proxy_buffering off;              proxy_request_buffering off;    }    location ~ ^/(api|admin|user|swagger|federal|static|media) {              proxy_pass http://localhost:8000;              proxy_set_header Upgrade $http_upgrade;              proxy_set_header Host $host;              proxy_set_header X-Real-IP $remote_addr;              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;              proxy_set_header X-Forwarded-Proto https;      # correctly frowards http/https based on scheme#              add_header Access-Control-Allow-Origin *;            # For allowing CORS request; comment if handled by application.              proxy_connect_timeout 240;            # Timeout settings for http requests              proxy_send_timeout 240;            # Increase if server times out              proxy_read_timeout 240;              proxy_buffering off;              proxy_request_buffering off;    }              root /home/ubuntu/Projects/dvs-v3-frontend/dist;\t      index  index.html index.htm;     location / {\t      add_header Access-Control-Allow-Origin *;              try_files $uri /index.html;            # if no endpoint found try index.html             }}' > dvs-dev.anilrajrimal.com.np.conf\"",
        "cwd": "/etc/nginx/sites-enabled"
      },
      "id": "f17144f3-b38c-4573-a1c0-f35952f148d8",
      "name": "create a nginx config file in sites-enabled directory",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3660,
        360
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo nginx -t",
        "cwd": "/etc/nginx/sites-enabled"
      },
      "id": "d70f48dd-27d6-424b-af73-53c91ab90b7d",
      "name": "Test nginx1",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3900,
        360
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo nginx -s reload",
        "cwd": "/etc/nginx/sites-enabled"
      },
      "id": "f5765bf9-29cb-49be-8b47-2802a81ee657",
      "name": "Reload nginx",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        4120,
        360
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ddebf767-e60a-40d1-af60-a7036ccdacc3",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4480,
        360
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C073V4SMDJ5",
          "mode": "list",
          "cachedResultName": "dvs-frontend-v3"
        },
        "text": "test message ..",
        "otherOptions": {}
      },
      "id": "864d4fca-7aa3-458b-a671-1447fe91d041",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        4700,
        360
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "oytOvgZOMj4GVobW",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "git pull origin develop",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "dfc8bf90-4d8c-49c2-aec8-16d0ab9939d8",
      "name": "git pull develop",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1200,
        340
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "git clone git@github.com:naxa-developers/dvs-v3-frontend.git",
        "cwd": "/home/ubuntu/Projects/"
      },
      "id": "fa654fe7-31af-485a-a185-652ffba122c1",
      "name": "SSH into VM",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        920,
        400
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "cp .env.example .env",
        "cwd": "/home/ubuntu/Projects/dvs-v3-frontend"
      },
      "id": "8b98d1b7-1894-4d60-af28-8afd027addb1",
      "name": "copy .env",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1800,
        460
      ],
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "sshPrivateKey": {
          "id": "aDoEMAgfjOxUDXWv",
          "name": "SSH Password account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-05-15T05:41:40.000Z",
  "versionId": "f2e354e4-5160-48ea-8d42-f6331b012bc8"
}